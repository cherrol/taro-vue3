/*
 * Box sizing
**/
@each $name, $value in map.get($layout, "box-sizing") {
	@include tw-mixins($selector: box-#{$name}) {
		box-sizing: $value;
	}
}

/*
 * Display
**/
@each $name, $value in map.get($layout, "display") {
	@include tw-mixins($selector: #{$name}) {
		display: $value;
	}
}

/*
 * Float
**/
@each $name, $value in map.get($layout, "float") {
	@include tw-mixins($selector: float-#{$name}) {
		float: $value;
	}
}

/*
 * Clear
**/
@each $name, $value in map.get($layout, "clear") {
	@include tw-mixins($selector: clear-#{$name}) {
		clear: $value;
	}
}

/*
 * Object fit
**/
@each $name, $value in map.get($layout, "object-fit") {
	@include tw-mixins($selector: object-#{$name}) {
		object-fit: $value;
	}
}

/*
 * Object position
**/
@each $name, $value in map.get($layout, "object-position") {
	@include tw-mixins($selector: object-#{$name}) {
		object-position: $value;
	}
}

/*
 * Overflow
**/
@each $name, $value in map.get($layout, "overflow") {
	@include tw-mixins($selector: overflow-#{$name}) {
		overflow: $value;
	}
	@include tw-mixins($selector: overflow-x-#{$name}) {
		overflow-x: $value;
	}
	@include tw-mixins($selector: overflow-y-#{$name}) {
		overflow-y: $value;
	}

	@if $value == "hidden" {
		@include tw-mixins($selector: overflow-#{$name}--important) {
			overflow: $value !important;
		}
		@include tw-mixins($selector: overflow-x-#{$name}--important) {
			overflow-x: $value !important;
		}
		@include tw-mixins($selector: overflow-y-#{$name}--important) {
			overflow-y: $value !important;
		}
	}
}

/*
 * Position
**/
@each $name, $value in map.get($layout, "position") {
	@include tw-mixins($selector: #{$name}) {
		position: $value;
	}
}

/*
 * Position inset
**/
@each $name, $value in map.get($layout, "inset") {
	@include tw-mixins($selector: left-#{$name}) {
		left: $value;
	}
	@include tw-mixins($selector: right-#{$name}) {
		right: $value;
	}
	@include tw-mixins($selector: top-#{$name}) {
		top: $value;
	}
	@include tw-mixins($selector: bottom-#{$name}) {
		bottom: $value;
	}
	@include tw-mixins($selector: inset-x-#{$name}) {
		left: $value;
		right: $value;
	}
	@include tw-mixins($selector: inset-y-#{$name}) {
		bottom: $value;
		top: $value;
	}
	@include tw-mixins($selector: inset-#{$name}) {
		left: $value;
		right: $value;
		bottom: $value;
		top: $value;
	}

	@if meta.type-of($value) == number and $value > 0 {
		@include tw-mixins($selector: -left-#{$name}) {
			left: -$value;
		}
		@include tw-mixins($selector: -right-#{$name}) {
			right: -$value;
		}
		@include tw-mixins($selector: -top-#{$name}) {
			top: -$value;
		}
		@include tw-mixins($selector: -bottom-#{$name}) {
			bottom: -$value;
		}
		@include tw-mixins($selector: -inset-x-#{$name}) {
			left: -$value;
			right: -$value;
		}
		@include tw-mixins($selector: -inset-y-#{$name}) {
			bottom: -$value;
			top: -$value;
		}
		@include tw-mixins($selector: -inset-#{$name}) {
			left: -$value;
			right: -$value;
			bottom: -$value;
			top: -$value;
		}
	}
}

/*
 * Visibility
**/
@each $name, $value in map.get($layout, "visibility") {
	@include tw-mixins($selector: #{$name}) {
		visibility: $value;
	}
}

/*
 * Z-index
**/
@each $name, $value in map.get($layout, "zindex") {
	@include tw-mixins($selector: z-#{$name}) {
		z-index: $value;
	}

	@if $name == "1" {
		@include tw-mixins($selector: -z-#{$name}) {
			z-index: -$value;
		}
	}
}
